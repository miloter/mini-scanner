/**
 * Implementación de una clase cuya función principal es la de
 * servir de analizador léxico o escáner simplificado.
 *
 * Las clases de componentes léxicos que puede reconocer son:
 *      Palabras Clave.
 *      Identificadores.
 *      Constantes numéricas.
 *      Constantes de cadena.
 *      Operadores.
 *      Fin de archivo.
 *      Carácter desconocido.
 * En caso de ambigüedad la prioridad se establece
 * por el orden dado anteriormente de arriba hacia abajo
 *
 * @author miloter
 * @since 2025-01-04
 * @version 2025-01-04
 * @license MIT
 */
export default class MiniScanner{static#e=/^[^\s\p{L}\d]+$/u;static#t=/^[\p{L}\d]$/u;static#i=/^[_\p{L}]$/u;static#r(e){switch(e){case"\t":case"\n":case"\v":case"\f":case"\r":case" ":return!0;default:return!1}}static#n(e){return MiniScanner.#r(e)&&!MiniScanner.#s(e)}static#s(e){return"\n"===e||"\r"===e}static#a(e){if(0===e.length)return!1;if(!MiniScanner.#i.test(e[0]))return!1;for(let t=1;t<e.length;t++)if(!MiniScanner.#t.test(e[t]))return!1;return!0}static get maxUserIndex(){return 4096}static get string(){return MiniScanner.maxUserIndex+1}static get uknown(){return MiniScanner.maxUserIndex+3}static get eof(){return MiniScanner.maxUserIndex+5}static get ident(){return MiniScanner.maxUserIndex+7}static get number(){return MiniScanner.maxUserIndex+8}static get operator(){return MiniScanner.maxUserIndex+9}static get keyword(){return MiniScanner.maxUserIndex+10}static get rangeInt(){return 0}static get rangeDouble(){return 1}static get rangeOverflow(){return 2}static get maxExpo(){return Number.MAX_SAFE_INTEGER}static get maxExpoNorm(){return 309}static get minExpoNorm(){return-323}static get maxMantissa(){return Number.MAX_SAFE_INTEGER}static#h(e){return MiniScanner.#e.test(e)}#o;#u;#f;#c;#l;#d;#x;#g;#m;#p;#k;#S;#C;#M;#w;#B;#b;#A;#E;#I;#v;#O;#N;#R;#L;constructor(e="",t=!1){this.#o=e,this.#u=t,this.#f="",this.#c=new Map,this.#l=new Map,this.#d=!0,this.#x="",this.#g=0,this.#m=MiniScanner.rangeInt,this.#p=0,this.#k=0,this.#S=1,this.#C=0,this.#M=0,this.#w=!1,this.resetVarsAnalisis()}#P(){let e,t=0,i=0,r=0,n=this.#E;this.#p=0,this.#k=0,this.#C=0,this.#w=!1;do{switch(n<=this.#b?(e=this.#o[n++],i++):t=4,t){case 0:t="0"===e?1:4;break;case 1:t="X"===e||"x"===e?2:4;break;case 2:case 3:e>="0"&&e<="9"?(t=3,r=i,this.#w||this.#U(e.charCodeAt(0)-48,16)):e>="A"&&e<="F"?(t=3,r=i,this.#w||this.#U(e.charCodeAt(0)-55,16)):e>="a"&&e<="f"?(t=3,r=i,this.#w||this.#U(e.charCodeAt(0)-87,16)):t=4;break}}while(4!==t);return r>0&&(this.#A=this.#E,this.#E+=r,this.#v+=r,!0)}#y(){let e=0,t=[];return this.#P()?(this.#w?this.#m=MiniScanner.rangeOverflow:this.#m=MiniScanner.rangeInt,e=!0):this.#T(t)?(this.#w?this.#m=MiniScanner.rangeOverflow:this.#m=t[0]?MiniScanner.rangeInt:MiniScanner.rangeDouble,e=!0):e=!1,e}#T(e){let t,i=0,r=0,n=0,s=this.#E,a=!1;if(e[0]=!0,this.#p=0,this.#k=0,this.#C=0,this.#M=0,this.#S=0,!(s<=this.#b))return!1;if(t=this.#o[s],t<"0"||t>"9")return!1;do{switch(s<=this.#b?(t=this.#o[s++],r++):i=7,i){case 0:t>="0"&&t<="9"?(i=1,n=r,this.#$(t.charCodeAt(0)-48,e)):i=7;break;case 1:t>="0"&&t<="9"?(n=r,this.#$(t.charCodeAt(0)-48,e)):t===(this.#d?".":",")?i=2:"E"===t||"e"===t?(i=4,e[0]=!1):i=7;break;case 2:t>="0"&&t<="9"?(i=3,e[0]=!1,n=r,this.#F(t.charCodeAt(0)-48)):i=7;break;case 3:t>="0"&&t<="9"?(n=r,this.#F(t.charCodeAt(0)-48)):i="E"===t||"e"===t?4:7;break;case 4:t>="0"&&t<="9"?(i=6,e[0]=!1,n=r,this.#D(t.charCodeAt(0)-48,a)):"+"===t?i=5:"-"===t?(i=5,a=!0):i=7;break;case 5:t>="0"&&t<="9"?(i=6,n=r,this.#D(t.charCodeAt(0)-48,a)):i=7;break;case 6:t>="0"&&t<="9"?(n=r,this.#D(t.charCodeAt(0)-48,a)):i=7;break}}while(7!==i);return n>0&&(this.#_(e[0],a),this.#A=this.#E,this.#E+=n,this.#v+=n,!0)}#_(e,t){this.#w=!1,e||0===this.#k?this.#p=this.#k:(t?this.#C-=this.#M:this.#C+=this.#M,this.#C+this.#S>MiniScanner.maxExpoNorm?(this.#w=!0,this.#p=1/0):this.#C+this.#S<MiniScanner.minExpoNorm?this.#p=0:this.#p=this.#k*Math.pow(10,this.#C))}#U(e,t){this.#k<=Math.floor((MiniScanner.maxMantissa-e)/t)?(this.#k=this.#k*t+e,this.#p=this.#k):this.#w=!0}#$(e,t){this.#k<=Math.floor((MiniScanner.maxMantissa-e)/10)?(this.#k=10*this.#k+e,(0!==this.#S||0!==e)&&this.#S++):(this.#C++,t[0]=!1)}#F(e){this.#k<=Math.floor((MiniScanner.maxMantissa-e)/10)&&(this.#k=10*this.#k+e,this.#C--,(0!==this.#S||0!==e)&&this.#S++)}#D(e,t){this.#M<=Math.floor((MiniScanner.maxExpo-e)/10)&&(this.#M=10*this.#M+e)}#W(){for(;this.#E<=this.#b;)if(this.#V(this.#E))this.#E++,this.#v++;else{if(!this.#X())break;this.#G()}}#H(){if(this.#K())return!1;if(!MiniScanner.#i.test(this.#j()))return!1;for(this.#A=this.#E++;this.#E<=this.#b&&MiniScanner.#t.test(this.#j());)this.#E++;return this.#v+=this.tokenLength(),!0}#q(){if(!this.#z(this.#x))return!1;this.#f="",this.#A=this.#E;let e=!1,t=!1;this.#E+=this.#x.length;do{if(this.#J())e=!0;else if(this.#Q(this.#x))this.#E+=this.#x.length,e=!0,t=!0;else if("\\"===this.#j()){const t=this.#Y();-1!==t?this.#f+=t:e=!0}else this.#f+=this.#Z()}while(!e);return t?this.#v+=this.tokenLength():this.#E=this.#A,t}#Y(){let e,t;if(this.#E++,this.#J())return-1;switch(this.#j()){case"a":return this.#E++,"";case"b":return this.#E++,"\b";case"f":return this.#E++,"\f";case"n":return this.#E++,"\n";case"r":return this.#E++,"\r";case"t":return this.#E++,"\t";case"v":return this.#E++,"\v";case"0":return this.#E++,"\0";case'"':return this.#E++,'"';case"'":return this.#E++,"'";case"\\":return this.#E++,"\\";case"x":if(this.#E++,this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return-1;t=e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return this.#E--,String.fromCharCode(t);t=16*t+e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return this.#E--,String.fromCharCode(t);t=16*t+e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return this.#E--,String.fromCharCode(t);t=16*t+e.charCodeAt(0)-87}return String.fromCharCode(t);case"u":if(this.#E++,this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return-1;t=e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return-1;t=16*t+e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return-1;t=16*t+e.charCodeAt(0)-87}if(this.#K())return-1;if(e=this.#Z(),e>="0"&&e<="9")t=16*t+e.charCodeAt(0)-48;else if(e>="A"&&e<="F")t=16*t+e.charCodeAt(0)-55;else{if(!(e>="a"&&e<="f"))return-1;t=16*t+e.charCodeAt(0)-87}return String.fromCharCode(t);default:return this.#Z()}}#K(){return this.#E>this.#b}#X(){return!this.#K()&&!!MiniScanner.#s(this.#j())}#J(){return!!this.#K()||!!this.#X()}#G(){this.#O=this.#v,"\r"===this.#j()?(this.#E++,this.#E<=this.#b&&"\n"===this.#j()&&this.#E++):this.#E++,this.#I++,this.#v=0}#Q(e){if(""===e)return!1;let t=this.#E,i=0;for(;t<=this.#b&&i<e.length&&this.#o[t]===e[i];)t++,i++;return i===e.length}#ee(e,t){e.length>this.#g&&(this.#g=e.length),this.#l.set(e,t)}#te(e,t){if(this.#K())return!1;for(e[0]=this.#o.substring(this.#E,this.#E+this.#g);void 0===this.#l.get(e[0])&&e[0].length>0;)e[0]=e[0].substring(0,e[0].length-1);return t&&e[0].length>0&&(this.#A=this.#E,this.#E+=e[0].length,this.#v+=e[0].length),e[0].length>0}#z(e){let t=[];return!this.#K()&&(0!==e.length&&(!!this.#te(t,!1)&&e===t[0]))}#j(){return this.#o[this.#E]}#Z(){const e=this.#j();return this.#E++,e}#V(e){return!(e<0||e>this.#b)&&MiniScanner.#n(this.#o[e])}resetVarsAnalisis(){this.#B=[],this.beginAnalisis(),this.#b=this.#o.length-1}beginAnalisis(){this.#A=0,this.#E=0,this.#I=1,this.#v=1,this.#O=this.#v,this.#N=MiniScanner.eof,this.#R=MiniScanner.eof,this.#L=MiniScanner.eof}isUsePoint(){return this.#d}setUsePoint(e){this.#d=e}getIndexBuffer(){return this.#E}getLin(){return this.#I}getCol(){return this.#v}getLastCol(){return this.#O}length(){return this.#b+1}tokenLength(){return this.#E-this.#A}getLexeme(){return this.#o.substring(this.#A,this.#E)}getText(){return this.#o}setText(e){this.#o=e,this.resetVarsAnalisis()}substring(e,t){return this.#o.substring(e,t)}getNum(){return this.#p}getNumOverflow(){return this.#w}getNumRange(){return this.#m}getMant(){return this.#k}getProcessedString(){return this.#f}getChar(e){if(e<0||e>this.#b)throw new RangeError("El índice debe estár entre cero y la longitud de la secuencia menos uno.");return this.#o[e]}getTokenClass(){return this.#L}getToken(){return this.#N}getTokenPrev(){return this.#R}tokenLin(){return this.#N===MiniScanner.eol?this.#I-1:this.#I}getTokenIndex(){return this.#A}tokenCol(){return this.#N===MiniScanner.eol?this.#O:this.#v-this.tokenLength()}setOperatorString(e){if(0===e.length)this.#x="";else{if(!MiniScanner.#h(e))throw new TypeError(`'${e}' no se admite como operador`);if(void 0!==this.#l.get(e))throw new Error(`'${e}' ya existe como operador`);this.#x=e,this.#ee(this.#x,MiniScanner.string)}}getOperatorString(){return this.#x}addKeyword(e,t){if(e>MiniScanner.maxUserIndex)throw new RangeError(`${e} debe ser menor o igual a ${MiniScanner.maxUserIndex}`);if(this.#u&&(t=t.toLowerCase()),!MiniScanner.#a(t))throw new TypeError(`${t} no es una palabra clave válida`);if(void 0!==this.#c.get(t))throw new Error(`'${t}' ya existe como palabra clave`);this.#c.set(t,e)}addOperator(e,t){if(e>MiniScanner.maxUserIndex)throw new RangeError(`${e} debe ser menor o igual a ${MiniScanner.maxUserIndex}`);if(!MiniScanner.#h(t))throw new TypeError(`'${t}' no se admite como operador`);if(void 0!==this.#l.get(t))throw new Error(`'${t}' ya existe como operador`);this.#ee(t,e)}nextToken(){let e=[];return this.#R=this.#N,this.#W(),this.#H()?(void 0!==this.#c.get(this.#u?this.getLexeme().toLowerCase():this.getLexeme())?(this.#L=MiniScanner.keyword,this.#N=this.#c.get(this.#u?this.getLexeme().toLowerCase():this.getLexeme())):(this.#L=MiniScanner.ident,this.#N=MiniScanner.ident),this.#N):this.#y()?(this.#L=MiniScanner.number,this.#N=MiniScanner.number,this.#N):this.#q()?(this.#L=MiniScanner.string,this.#N=MiniScanner.string,this.#N):this.#te(e,!0)?(this.#L=MiniScanner.operator,this.#N=this.#l.get(e[0]),this.#N):this.#K()?(this.#A=this.#E,this.#L=MiniScanner.eof,this.#N=MiniScanner.eof,this.#N):(this.#A=this.#E,this.#E++,this.#v++,this.#L=MiniScanner.uknown,this.#N=MiniScanner.uknown,this.#N)}push(){this.#B.push({indexBuffer:this.#E,tokenIndex:this.#A,tokenClass:this.#L,token:this.#N,tokenPrev:this.#R,lin:this.#I,col:this.#v,lastCol:this.#O,numRange:this.#m,num:this.#p,numOverflow:this.#w,mant:this.#k})}pop(){const e=this.#B.pop();return this.#E=e.indexBuffer,this.#A=e.tokenIndex,this.#L=e.claseToken,this.#N=e.token,this.#R=e.tokenPrev,this.#I=e.lin,this.#v=e.col,this.#O=e.lastCol,this.#m=e.numRange,this.#p=e.num,this.#w=e.numOverflow,this.#k=e.mant,this.#N}removeTopStack(){this.#B.pop()}}